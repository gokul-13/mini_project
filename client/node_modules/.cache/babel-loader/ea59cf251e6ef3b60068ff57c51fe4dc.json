{"ast":null,"code":"//spread Syntax\n// function Student(name,age,gender) {\n//     this.name=name;\n//     this.age=age;\n//     this.gender=gender;\n//   }\n//   const obj=new Student('gk',21,'Male');\n//   console.log(obj)\n//   const obj1= {...obj,type:'introvert'}\n//   console.log(obj1)\n//---------------------------\n//Destructuring\n// const obj={\n//     namei:'gk',\n//     age:20,\n//     home: 'chennai',\n//     course:{\n//         name: 'B.E',\n//         division: 'CSE'\n//     }\n//  }\n//  const {namei:firstName, course:{division:branch}} = obj;\n//  console.log(firstName);\n//  console.log(branch)\n//  const arr=[1,2,3,4,5];\n//  const [one,...rest]=arr;\n//  console.log(one,rest);\n//promise chaining\n// const obj=new Promise(function(resolve,reject){\n//         resolve(1);\n// })\n// obj1=obj.then((val)=>{\n//     console.log('value1')\n//     return 2;\n// })\n// obj2=obj1.then((val)=>{\n//     console.log(val);\n// })\n// Generators\n// function* createNumbers() {\n//     for(let i=0;i<10;i++) yield i;\n// }\n// function* newGen() {\n//     yield* createNumbers();\n//     yield* createNumbers();\n// }\n// let obj=newGen();\n// console.log(JSON.stringify(obj.next()))\n// console.log(JSON.stringify(obj.next()))\n// function* check() {\n//     let a=yield \"a\";\n//     console.log(a);\n//     let b=yield \"b\";\n//     console.log(b);\n// }\n// let obj=check();\n// console.log(obj.next().value);\n// console.log(obj.next(5).value);\n// Prototypes\n// let animal={\n//     name:'General animal',\n//     setName() {\n//         this.name=\"Blue animal\"\n//     }\n// }\n// let zebra={\n//     __proto__:animal,\n// }\n// console.log(Object.keys(zebra));\n// console.log(zebra.name);\n// zebra.setName();\n// console.log(zebra.name);\n// console.log(Object.keys(zebra));\n//Promise.all\n// (async function check() {\n//  const f1=new Promise((resolve,reject)=>{\n//     setTimeout(resolve(1),2000);\n// })\n// const f2=new Promise((resolve,reject)=>{\n//     setTimeout(resolve(2),2000);\n// })\n// const f3=new Promise((resolve,reject)=>{\n//     setTimeout(resolve(3),2000);\n// })\n// const val=await Promise.all([f1,f2,f3]);\n// console.log(val)\n// })()\n//async function search() {\n//     await setTimeout(()=>{console.log(\"Done\")},3000);\n// }\n// search();\n// const promise=new Promise((resolve,reject)=>{\n//     setTimeout(resolve(10),3000);\n// });\n// promise.then((res)=>{console.log(res)})\n//--------Prototypes\n// const phone ={\n//     brand:'Samsung',\n//     network: '4G',\n//     screen: \"6 inch\"\n// }\n// const S21={\n//     model:\"S21 Ultra\",\n//     network:'5G'\n// };\n// S21.__proto__=phone;\n// console.log(S21.__proto__);\n// console.log(S21.brand);\n// console.log(S21.network)\n// S21.screen=\"7 inch\";\n// console.log(S21);\n// console.log(S21.__proto__.screen);\n// //-----\n// function CreateObj() {\n//     this.name='gk',\n//     this.age=21;\n// return {}\n// }\n// const obj=new CreateObj();\n// console.log(obj);\n// console.log(\"End\");\nfunction check() {\n  let name = \"hk\";\n\n  function dummy() {\n    console.log(this.name);\n  }\n\n  dummy();\n  console.log(name);\n}\n\ncheck();","map":{"version":3,"sources":["/Users/ecom-gokula.vp/Documents/Samsung_docs/mini_project/client/src/practice.js"],"names":["check","name","dummy","console","log"],"mappingsiB;AACb,MAAIC,IAAI,GAAC,IAAT;;AAEA,WAASC,KAAT,GAAiB;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,IAAjB;AACH;;AACDC,EAAAA,KAAK;AACLC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACH;;AACDD,KAAK","sourcesContent":["//spread Syntax\n\n// function Student(name,age,gender) {\n//     this.name=name;\n//     this.age=age;\n//     this.gender=gender;\n//   }\n  \n//   const obj=new Student('gk',21,'Male');\n//   console.log(obj)\n//   const obj1= {...obj,type:'introvert'}\n//   console.log(obj1)\n\n//---------------------------\n\n//Destructuring\n\n// const obj={\n//     namei:'gk',\n//     age:20,\n//     home: 'chennai',\n//     course:{\n//         name: 'B.E',\n//         division: 'CSE'\n//     }\n        \n//  }\n\n//  const {namei:firstName, course:{division:branch}} = obj;\n//  console.log(firstName);\n//  console.log(branch)\n\n//  const arr=[1,2,3,4,5];\n//  const [one,...rest]=arr;\n//  console.log(one,rest);\n\n\n\n//promise chaining\n\n// const obj=new Promise(function(resolve,reject){\n//         resolve(1);\n// })\n\n\n// obj1=obj.then((val)=>{\n//     console.log('value1')\n//     return 2;\n// })\n\n// obj2=obj1.then((val)=>{\n//     console.log(val);\n// })\n\n// Generators\n\n// function* createNumbers() {\n//     for(let i=0;i<10;i++) yield i;\n// }\n\n// function* newGen() {\n//     yield* createNumbers();\n//     yield* createNumbers();\n// }\n\n// let obj=newGen();\n// console.log(JSON.stringify(obj.next()))\n// console.log(JSON.stringify(obj.next()))\n\n// function* check() {\n//     let a=yield \"a\";\n\n//     console.log(a);\n//     let b=yield \"b\";\n\n//     console.log(b);\n// }\n\n// let obj=check();\n// console.log(obj.next().value);\n// console.log(obj.next(5).value);\n\n\n// Prototypes\n\n// let animal={\n//     name:'General animal',\n//     setName() {\n//         this.name=\"Blue animal\"\n//     }\n// }\n\n// let zebra={\n//     __proto__:animal,\n// }\n// console.log(Object.keys(zebra));\n// console.log(zebra.name);\n// zebra.setName();\n// console.log(zebra.name);\n// console.log(Object.keys(zebra));\n\n//Promise.all\n\n// (async function check() {\n\n//  const f1=new Promise((resolve,reject)=>{\n//     setTimeout(resolve(1),2000);\n// })\n\n// const f2=new Promise((resolve,reject)=>{\n//     setTimeout(resolve(2),2000);\n// })\n\n// const f3=new Promise((resolve,reject)=>{\n//     setTimeout(resolve(3),2000);\n// })\n\n// const val=await Promise.all([f1,f2,f3]);\n// console.log(val)\n// })()\n\n\n//async function search() {\n\n//     await setTimeout(()=>{console.log(\"Done\")},3000);\n// }\n\n// search();\n\n\n// const promise=new Promise((resolve,reject)=>{\n//     setTimeout(resolve(10),3000);\n// });\n\n// promise.then((res)=>{console.log(res)})\n\n\n//--------Prototypes\n\n\n\n// const phone ={\n//     brand:'Samsung',\n//     network: '4G',\n//     screen: \"6 inch\"\n// }\n// const S21={\n//     model:\"S21 Ultra\",\n//     network:'5G'\n// };\n// S21.__proto__=phone;\n// console.log(S21.__proto__);\n// console.log(S21.brand);\n// console.log(S21.network)\n// S21.screen=\"7 inch\";\n// console.log(S21);\n// console.log(S21.__proto__.screen);\n\n// //-----\n\n// function CreateObj() {\n//     this.name='gk',\n//     this.age=21;\n        // return {}\n// }\n\n// const obj=new CreateObj();\n// console.log(obj);\n\n// console.log(\"End\");\n\n\nfunction check() {\n    let name=\"hk\";\n\n    function dummy() {\n        console.log(this.name);\n    }\n    dummy();\n    console.log(name);\n}\ncheck();"]},"metadata":{},"sourceType":"script"}