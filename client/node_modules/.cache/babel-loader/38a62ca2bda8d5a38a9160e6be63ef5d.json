{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"form__group\"\n};\nconst _hoisted_2 = {\n  class: \"form__label\"\n};\nconst _hoisted_3 = [\"name\", \"disabled\", \"placeholder\"];\nexport function render(_ctx, _cache) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"label\", _hoisted_2, _toDisplayString(_ctx.llabel), 1\n  /* TEXT */\n  ), _withDirectives(_createElementVNode(\"input\", {\n    name: _ctx.llabel,\n    disabled: _ctx.to_disable,\n    class: \"form__filed\",\n    type: \"text\",\n    placeholder: _ctx.llabel,\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.name = $event)\n  }, null, 8\n  /* PROPS */\n  , _hoisted_3), [[_vModelText, _ctx.name]])]);\n}","map":{"version":3,"mappings":";;AACOA,OAAK,EAAC;;;AACAA,OAAK,EAAC;;;;uBADjBC,oBAGM,KAHN,cAGM,CAFFC,oBAA6C,OAA7C,cAA6CC,iBAAhBC,WAAgB,CAA7C,EAAmC;AAAA;AAAnC,GAEE,kBADFF,oBAAkH,OAAlH,EAAkH;AAA1GG,QAAI,EAAED,WAAoG;AAA3FE,YAAQ,EAAEF,eAAiF;AAArEJ,SAAK,EAAC,aAA+D;AAAjDO,QAAI,EAAC,MAA4C;AAApCC,eAAW,EAAEJ,WAAuB;+DAANA,YAAIK;AAAE,GAAlH;;AAAA,gCAA4GL,YAC1G,CAHN","names":["class","_createElementBlock","_createElementVNode","_toDisplayString","_ctx","name","disabled","type","placeholder","$event"],"sourceRoot":"","sources":["/Users/ecom-gokula.vp/Documents/Samsung_docs/mini_project/client/src/components/TextBox.vue"],"sourcesContent":["<template>\n  <div class='form__group'>\n      <label class='form__label'>{{llabel}}</label>\n      <input :name=\"llabel\" :disabled='to_disable' class='form__filed' type='text' :placeholder='llabel' v-model='name'>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nexport default {\n    data() {\n      return {\n          name:' ',          \n          to_disable=false\n      }\n    },\n    props:['llabel','action','text_sent'],\n    watch: {\n      action: async function(newvalue) {\n        if(newvalue==='new') {\n          this.$emit('printDetails',this.name)\n        }\n        else if(newvalue==='setname') {\n          console.log(\"Value:\"+this.name_value);\n              const result=await axios.get(`http://localhost:8068/student/detail/${this.text_sent}`);\n              console.log('Here');\n              console.log(result.data);\n              this.name=result.data[0].name;\n              to_disable=true;\n        }\n      } \n    }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}