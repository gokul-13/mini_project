{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"form__label\"\n}, \"Registration No\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  id: \"student\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \" Course Id\"), /*#__PURE__*/_createElementVNode(\"th\", null, \" Course Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \" Marks Scored\")], -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_hoisted_1, _hoisted_2, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    placeholder: \"Registration Number\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.reg_no = $event),\n    required: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.reg_no]]), _hoisted_3, _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.submit && $options.submit(...args))\n  }, \"Get Marks\"), _createElementVNode(\"div\", null, [_createElementVNode(\"h1\", null, \"Student Name: \" + _toDisplayString($data.data_rec[0]?.name), 1\n  /* TEXT */\n  ), _createElementVNode(\"table\", _hoisted_4, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.data_rec, record => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: record.name\n    }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(record, field => {\n      return _openBlock(), _createElementBlock(\"td\", {\n        key: field.name\n      }, _toDisplayString(field), 1\n      /* TEXT */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])])], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;gCACIA,oBAAkD,OAAlD,EAAkD;AAA3CC,OAAK,EAAC;AAAqC,CAAlD,EAA2B,iBAA3B,EAA0C;AAAA;AAA1C;;gCAAkDD,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;gCAC4BA,oBAAI,IAAJ,EAAI,IAAJ,EAAI,IAAJ,EAAI;AAAA;AAAJ;;;AAIxEE,IAAE,EAAC;;;gCACNF,oBAIK,IAJL,EAIK,IAJL,EAIK,cAHDA,oBAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CAGC,eAFDA,oBAAqB,IAArB,EAAqB,IAArB,EAAI,cAAJ,CAEC,eADDA,oBAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,CACC,CAJL;;AAAA;;;6DANHG,YAAkDC,4BACnDJ,oBAA+E,OAA/E,EAA+E;AAAxEK,QAAI,EAAC,MAAmE;AAA5DC,eAAW,EAAC,qBAAgD;+DAAjBC,eAAMC,OAAW;AAATC,YAAQ,EAAR;AAAS,GAA/E;;AAAA,oBAA8DF,iBAAiBG,YAC/EV,oBAA0C,QAA1C,EAA0C;AAAjCW,WAAK,yCAAEC,2CAAF;AAA4B,GAA1C,EAAwB,WAAxB,GACAZ,oBAeM,KAfN,EAeM,IAfN,EAeM,CAdFA,oBAA4C,IAA5C,EAA4C,IAA5C,EAAI,mBAAca,iBAAEN,eAAQ,CAAR,GAAaO,IAAf,CAAlB,EAAqC;AAAA;AAArC,GAcE,EAbNd,oBAYQ,OAZR,cAYQ,CAXJe,UAWI,qBANJC,oBAIKC,SAJL,EAIK,IAJL,EAIKC,YAJgBX,cAIhB,EAJMY,MAAkB,IAAZ;yBAAjBH,oBAIK,IAJL,EAIK;AAJ2BI,SAAG,EAAED,MAAM,CAACL;AAIvC,KAJL,sBACIE,oBAEKC,SAFL,EAEK,IAFL,EAEKC,YAFeC,MAEf,EAFME,KAAe,IAAV;2BAAhBL,oBAEK,IAFL,EAEK;AAFwBI,WAAG,EAAEC,KAAK,CAACP;AAEnC,OAFL,mBACMO,MADN,EACW;AAAA;AADX;KAEK,CAFL;;AAAA,OADJ;GAIK,CAJL;;AAAA,GAMI,EAZR,CAaM,CAfN","names":["_createElementVNode","class","id","_hoisted_1","_hoisted_2","type","placeholder","$data","$event","required","_hoisted_3","onClick","$options","_toDisplayString","name","_hoisted_5","_createElementBlock","_Fragment","_renderList","record","key","field"],"sourceRoot":"","sources":["/Users/ecom-gokula.vp/Documents/Samsung_docs/mini_project/client/src/views/ViewStudent.vue"],"sourcesContent":["<template>\n    <label class='form__label'>Registration No</label><br>\n   <input type='text' placeholder=\"Registration Number\" v-model='reg_no' required><br>\n   <button @click='submit'>Get Marks</button>\n   <div>\n       <h1>Student Name: {{data_rec[0]?.name}}</h1>\n   <table id='student'>\n       <tr>\n           <th> Course Id</th>\n           <th> Course Name</th>\n           <th> Marks Scored</th>\n       </tr>\n       <tr v-for='record in data_rec' :key=\"record.name\">\n           <td v-for='field in record' :key='field.name'>\n               {{field}}\n           </td>\n       </tr>\n\n   </table>\n   </div>\n</template>\n\n<script>\nconst validate=require('../validation');\nimport axios from 'axios';\nexport default {\n        data() {\n            return {\n                reg_no:'',\n                data_rec:[]\n            }\n        },\n        methods:{\n            async submit() {\n                console.log(this.reg_no);\n                if(!validate.validateRegNo(this.reg_no,4)) {alert(\"Invalid Register Number\");return;}\n                const res=await axios.get(`http://localhost:8068/student/view/${this.reg_no}`);\n                console.log(res.data);\n                if(res.data.status==='failure') {\n                    alert(\"Student Not Found\");\n                }\n                else if(res.data.status==='no_records_found') {\n\n                }\n                else {\n                        this.data_rec=res.data.value;\n                }\n            }\n        }\n}\n</script>\n\n<style>\n\n</style>"]},"metadata":{},"sourceType":"module"}